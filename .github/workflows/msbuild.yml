name: MSBuild

on:
  pull_request_target:
    branches: [ master ]
    types: [ labeled ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./src/EasyEPlanner.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    name: Build and test
    runs-on: windows-latest
    if: contains( github.event.pull_request.labels.*.name, 'safe to test' )

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Download fetch.exe and EPLAN API binaries, copy it to the .net specific path
      run: |
        curl -L "https://github.com/gruntwork-io/fetch/releases/download/v0.4.2/fetch_windows_amd64.exe" -O
        md src/bin/${{env.BUILD_CONFIGURATION}}
        ./fetch_windows_amd64.exe --github-oauth-token="${{ secrets.EPLAN_API_BIN }}" --repo="https://github.com/savushkin-r-d/EPLAN-API-bin" --tag="2.9" --release-asset=".*" "src/bin/${{env.BUILD_CONFIGURATION}}"
        md submodule/EplanIdleTimeModule/EplanIdleTimeModule/bin/${{env.BUILD_CONFIGURATION}}
        cp src/bin/${{env.BUILD_CONFIGURATION}}/* submodule/EplanIdleTimeModule/EplanIdleTimeModule/bin/${{env.BUILD_CONFIGURATION}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd ./EasyEplanner.Tests
        dotnet test /p:Configuration=${{env.BUILD_CONFIGURATION}}

    - uses: actions/upload-artifact@v2
      with:
        name: EPLANner
        path: |
          src/bin/${{env.BUILD_CONFIGURATION}}/EPLAN.EplAddin.EasyEPlanner.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/EPLAN.EplAddin.IdleTimeModule.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/Spire.Pdf.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/Spire.XLS.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/Spire.License.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/ObjectListView.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/Aga.Controls.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/LuaInterface.dll
          src/bin/${{env.BUILD_CONFIGURATION}}/KopiLua.dll
